//
// Created by Radu on 3/28/2022.
//

#include "menu.h"
#include <iostream>

void help() {
    printf("You can use the following commands, sir:\n"
        "1 for adding\n"
        "2 for updating\n"
        "3 for deleting\n"
        "4 finding an activity\n"
        "5 for filtering\n"
        "6 for sorting\n"
        "! for showing all (filtered and sorted)\n"
        "? for getting help\n"
        "x for exiting\n");
}

void UserInterface::addSubmenu() {
    string ui;
    printf("For adding enter your input in the following format, sir: <name>;<descr>;<type>;<time>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else {
        if (srv.add(ui)) {
            printf("Added with succes, sir!\n");
        }
        else {
            printf("Wrong input or there is already such activity, sir!\n");
        }
    }
}

void UserInterface::updateSubmenu() {
    string ui;
    printf("For updating enter your input in the following format, sir: <name>;<descr>;<type>;<time>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else {
        if (srv.update(ui)) {
            printf("Updated with succes, sir!\n");
        }
        else {
            printf("Wrong input or there was no such activity, sir!\n");
        }
    }
}

void UserInterface::delSubmenu() {
    string ui;
    printf("For deleting enter your input in the following format, sir: <name>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else {
        if (srv.del(ui)) {
            printf("Deleted with succes, sir!\n");
        }
        else {
            printf("Wrong input or there was no such activity, sir!\n");
        }
    }
}

void UserInterface::findSubmenu() {
    string ui;
    printf("For finding enter your input in the following format, sir: <name>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else {
        string toPrint;
        if (srv.findActivity(ui, toPrint)) {
            cout << toPrint;
            printf("Found with succes, sir!\n");
        }
        else {
            printf("Wrong input or there was no such activity, sir!\n");
        }
    }
}

void UserInterface::filterSubmenu() {
    string ui;
    printf("For filtering enter your input in the following format, sir:"
        " <0 for filtering the description field/ 1 for filtering the type field>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else if (ui == "0" || ui == "1") {
        bool field;
        if (ui == "0") {
            field = false;
        }
        else {
            field = true;
        }

        printf("Enter the value to search for in the following format, sir: <value>\n"
            "You can return by entering '<', sir!\n");
        getline(cin, ui);
        if (ui == "<") {
            return;
        }
        else {
            if (field) {
                flirtType = ui;
            }
            else {
                flirtDescr = ui;
            }
        }
    }
    else {
        printf("Wrong input, sir!");
        return;
    }
    printf("Filtered with succes, sir!\n");
}

void UserInterface::sortSubmenu() {
    string ui;
    printf("For sorting enter your input in the following format, sir:"
        " <asc for ascending order/ desc for descending order>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else if (ui == "asc" || ui == "desc") {
        string order = ui;

        printf("Enter the field to sort for in the following format, sir: <name/ description/ type/ duration>\n"
            "You can return by entering '<', sir!\n");
        getline(cin, ui);
        if (ui == "name" || ui == "description" || ui == "type" || ui == "duration") {
            const string& field = ui;
            srv.sort(order, field);
        }
        else {
            printf("Wrong input, sir!");
            return;
        }
    }
    else {
        printf("Wrong input, sir!");
        return;
    }
    printf("Sorted with succes, sir!\n");
}

void UserInterface::delAllSubmenu() {
    srv.delAll();
    printf("Deleted all instances with succes, sir!\n");
}

void UserInterface::generateByNameSubmenu() {
    string ui;
    printf("For generating by name enter your input in the following format, sir: <name>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else {
        if (srv.generateByName(ui)) {
            printf("Generated by name with succes, sir!\n");
        }
        else {
            printf("Wrong input, sir!\n");
        }
    }
}

void UserInterface::generateAllSubmenu() {
    string ui;
    printf("For generating all enter your input in the following format, sir: <number of new activities>\n"
        "You can return by entering '<', sir!\n");
    getline(cin, ui);
    if (ui == "<") {
        return;
    }
    else {
        if (srv.generateAll(ui)) {
            printf("Generated all with succes, sir!\n");
        }
        else {
            printf("Wrong input, sir!\n");
        }
    }
}

void UserInterface::reportTypesSubmenu() {
    unordered_map <string, ReportItem> toPrint = srv.reportTypes();
    for (auto& instance : toPrint) {
        instance.second.display();
    }
}

void UserInterface::undoSubmenu() {
    srv.undo();
}

void UserInterface::showAll() {
    int i;
    vector <Activity> toPrintV = srv.getAll(flirtDescr, flirtType);
    string toPrintLine;
    for (i = 0; i < toPrintV.size(); ++i) {
        toPrintV[i].activityToLine(toPrintLine);
        cout << toPrintLine;
    }
}

UserInterface::UserInterface(ActivityService& srv) : srv(srv) {
    flirtType = flirtDescr = "";
    string ui;
    printf("Welcome, sir! ");
    for (; true;) {
        printf("You are in the main menu. Enter your command, sir!\n");
        getline(cin, ui);
        if (ui == "1") {
            addSubmenu();
        }
        else if (ui == "2") {
            updateSubmenu();
        }
        else if (ui == "3") {
            delSubmenu();
        }
        else if (ui == "4") {
            findSubmenu();
        }
        else if (ui == "5") {
            filterSubmenu();
        }
        else if (ui == "6") {
            sortSubmenu();
        }
        else if (ui == "7") {
            delAllSubmenu();
        }
        else if (ui == "8") {
            generateByNameSubmenu();
        }
        else if (ui == "9") {
            generateAllSubmenu();
        }
        else if (ui == "0") {
            reportTypesSubmenu();
        }
        else if (ui == "<") {
            undoSubmenu();
        }
        else if (ui == "!") {
            showAll();
        }
        else if (ui == "?") {
            help();
        }
        else if (ui == "x") {
            break;
        }
        else {
            printf("Wrong input, sir! Double check your input doesn't have any spaces or any other characters, sir!\n");
            help();
        }
    }
}